remember: links to tutorials are located in the readme in /manifest

build command list:

- hmm:       printscreen of build commands
- lunch:   lunch <product_name>-<build_variant>
- tapas:   tapas [<App1> <App2> ...] [arm|x86|mips|armv5|arm64|x86_64|mips64] [eng|userdebug|user]
- croot:   Changes directory to the top of the tree.
- cout:    Changes directory to out.
- m:       Makes from the top of the tree.
- mm:      Builds all of the modules in the current directory, but not their dependencies.
- mmm:     Builds all of the modules in the supplied directories, but not their dependencies.
           To limit the modules being built use the syntax: mmm dir/:target1,target2.
- mma:     Builds all of the modules in the current directory, and their dependencies.
- mmp:     Builds all of the modules in the current directory and pushes them to the device.
- mmmp:    Builds all of the modules in the supplied directories and pushes them to the device.
- mmma:    Builds all of the modules in the supplied directories, and their dependencies.
- cgrep:   Greps on all local C/C++ files.
- ggrep:   Greps on all local Gradle files.
- jgrep:   Greps on all local Java files.
- resgrep: Greps on all local res/*.xml files.
- sgrep:   Greps on all local source files.
- godir:   Go to the directory containing a file.
- aospremote: Add git remote for matching AOSP repository
- cafremote: Add git remote for matching CodeAurora repository.
- mka:      Builds using SCHED_BATCH on all processors
- mkap:     Builds the module(s) using mka and pushes them to the device.
- cmka:     Cleans and builds using mka.
- reposync: Parallel repo sync using ionice and SCHED_BATCH
- repopick: Utility to fetch changes from Gerrit.
- installboot: Installs a boot.img to the connected device.
- installrecovery: Installs a recovery.img to the connected device.
- smash:    clean out the out directory of your lunched target only.
- mka bacon: Primary build command.  builds ota and runs squisher/optimizations using SCHED_BATCH on all processors (-j8).
- mka kernel: builds the kernel for the lunched build and spits it into the product out dir as devicename_kernel.zip
- mkaflash:  Same as mka in the top of the tree with the addition of flashing the rom, gapps, and addon zips.
- mkapush:   Same as mka with the addition of adb pushing to the device.
- reposync:  Parallel repo sync using ionice and SCHED_BATCH
- make:      builds OTA, does not run squisher


Steps to build:

From source root:
. build/envsetup.sh && lunch
choose the number of the target device

to build vanir spec builds from any directory:
mka bacon

How to to clean your out directory/cache:

ccache -c -C  ==  clean all your ccache out
make clean    ==  remove out directory
make clobber  ==  remove out directory
smash         ==  removes out directory for the build you are lunched on only

Look at the source to view more functions. 
The complete list is:
addcompletions 
add_lunch_combo 
cgrep 
check_product 
check_variant 
choosecombo 
chooseproduct 
choosetype 
choosevariant 
cproj 
croot 
findmakefile 
gdbclient 
get_abs_build_var 
getbugreports 
get_build_var 
getlastscreenshot 
getprebuilt 
getscreenshotpath 
getsdcardpath 
gettargetarch 
gettop 
godir 
hmm 
isviewserverstarted 
jgrep 
key_back 
key_home 
key_menu 
linaroinit 
lunch 
_lunch 
m
mgrep
mka 
mkapush 
mm 
mmm 
pid 
printconfig 
print_lunch_menu 
reposync 
resgrep 
runhat 
runtest 
set_java_home 
setpaths 
set_sequence_number 
set_stuff_for_environment 
settitle 
smoketest 
startviewserver 
stopviewserver 
systemstack 
tapas 
tracedmdump
