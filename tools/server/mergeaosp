#!/bin/bash
if [ -z $ANDROID_BUILD_TOP ]; then
    echo "Build environment not initialized, can't find top"
	echo "please run source build/envsetup.sh before you try to merge"
	echo "or run this script with source {path}/mergeaosp {branch}"
	return 255
fi
export mergecommmandfolder="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
mergefolderlist=$1
mergebranch=$2
if [ -z $mergefolderlist ] ; then
    echo "argument missing: file with list of repos"
    return 255
fi
if  [ -z $mergebranch ] ; then
    echo "argument missing: branch to merge"
	return 255
fi
if [ ! -e ~/aosp_merged ] ; then
	echo 'start merging'
else
    lastfile=$(head -n 1 ~/aosp_merged)
	lastbranch=$(sed -n '2p' ~/aosp_merged)
	if [ $lastfile != $mergefolderlist ]; then
	    echo "mergefolderlist isn't the same as the one you started with !"
		echo "aborting !"
		return 255
    fi
	if [ $lastbranch != $mergebranch ] ; then
	    echo "mergebranch isn't the same as the one you started with !"
		echo "aborting !"
		return 255
    fi		
	echo 'continue merging'
fi
if [ ! -e $mergefolderlist ] ; then
    echo "file not found: $mergefolderlist"
    return 255
fi
if [ ! -e ~/aosp_merged ] ; then
	echo $mergefolderlist >~/aosp_merged
	echo $mergebranch >>~/aosp_merged
fi
IFS=$'\n'
for dir in $(cat $mergefolderlist)
do
    OIFS="$IFS"
    IFS=';'
    read -a parts <<< "${dir}"
    IFS="$OIFS"
	if ! grep -q $dir ~/aosp_merged ; then
		echo ${dir} >>~/aosp_merged
		source $mergecommmandfolder/mergeaospfolder $ANDROID_BUILD_TOP/${parts[0]} ${parts[1]} ${parts[2]} $mergebranch
		if [ $? -ne 0 ] ; then
			return 255
		fi
	fi
done
echo "merges completed successfully !"
rm ~/aosp_merged
